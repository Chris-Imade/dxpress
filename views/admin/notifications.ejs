<!-- Notification Management Page -->
<div class="page-header" style="margin-bottom: 2rem; padding-bottom: 1rem; border-bottom: 2px solid #e5e7eb;">
    <h1 style="font-size: 2rem; color: #1f2937; margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.75rem;">
        <i class="fas fa-bell" style="color: #6366f1;"></i>
        Notification Management
    </h1>
    <p style="color: #6b7280; font-size: 1.1rem;">Send notifications to users and manage notification settings</p>
</div>

<!-- Statistics -->
<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
    <div style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 1.5rem; border-radius: 12px; box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
            <i class="fas fa-paper-plane" style="font-size: 2rem; opacity: 0.8;"></i>
        </div>
        <div style="font-size: 2.5rem; font-weight: bold; margin-bottom: 0.5rem;"><%= notificationStats.totalSent || 0 %></div>
        <div style="font-size: 0.9rem; opacity: 0.9;">Total Notifications Sent</div>
    </div>
    
    <div style="background: linear-gradient(135deg, #10b981, #059669); color: white; padding: 1.5rem; border-radius: 12px; box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
            <i class="fas fa-calendar-month" style="font-size: 2rem; opacity: 0.8;"></i>
        </div>
        <div style="font-size: 2.5rem; font-weight: bold; margin-bottom: 0.5rem;"><%= notificationStats.thisMonth || 0 %></div>
        <div style="font-size: 0.9rem; opacity: 0.9;">This Month</div>
    </div>
    
    <div style="background: linear-gradient(135deg, #f59e0b, #d97706); color: white; padding: 1.5rem; border-radius: 12px; box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
            <i class="fas fa-users" style="font-size: 2rem; opacity: 0.8;"></i>
        </div>
        <div style="font-size: 2.5rem; font-weight: bold; margin-bottom: 0.5rem;"><%= notificationStats.activeUsers || 0 %></div>
        <div style="font-size: 0.9rem; opacity: 0.9;">Active Users</div>
    </div>
    
    <div style="background: linear-gradient(135deg, #8b5cf6, #7c3aed); color: white; padding: 1.5rem; border-radius: 12px; box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
            <i class="fas fa-check-circle" style="font-size: 2rem; opacity: 0.8;"></i>
        </div>
        <div style="font-size: 2.5rem; font-weight: bold; margin-bottom: 0.5rem;"><%= notificationStats.deliveryRate || 0 %>%</div>
        <div style="font-size: 0.9rem; opacity: 0.9;">Delivery Rate</div>
    </div>
</div>

<!-- Notification Form -->
<div style="background: white; padding: 2rem; border-radius: 12px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); margin-bottom: 2rem;">
    <h2 style="font-size: 1.3rem; color: #1f2937; margin-bottom: 1rem; display: flex; align-items: center; gap: 0.5rem;">
        <i class="fas fa-plus-circle"></i>
        Create New Notification
    </h2>
    
    <!-- Alert Messages -->
    <div id="successMessage" style="padding: 1rem; border-radius: 8px; margin-bottom: 1rem; display: none; background-color: #d1fae5; color: #065f46; border: 1px solid #a7f3d0;"></div>
    <div id="errorMessage" style="padding: 1rem; border-radius: 8px; margin-bottom: 1rem; display: none; background-color: #fee2e2; color: #991b1b; border: 1px solid #fca5a5;"></div>
    
    <form id="notificationForm">
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1.5rem;">
            <div>
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Title *</label>
                <input type="text" id="notificationTitle" required style="width: 100%; padding: 0.75rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem;">
            </div>
            <div>
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Type</label>
                <div style="position: relative;">
                    <select id="notificationType" onchange="updateNotificationPreview()" style="width: 100%; padding: 0.75rem 0.75rem 0.75rem 3rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem;">
                        <option value="info">Info</option>
                        <option value="success">Success</option>
                        <option value="warning">Warning</option>
                        <option value="error">Error</option>
                        <option value="feature">Feature Update</option>
                        <option value="system">System</option>
                        <option value="shipment">Shipment</option>
                        <option value="payment">Payment</option>
                        <option value="security">Security</option>
                    </select>
                    <div id="typeIcon" style="position: absolute; left: 0.75rem; top: 50%; transform: translateY(-50%); width: 24px; height: 24px; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-size: 0.8rem; background: #3b82f6;">
                        <i class="fas fa-info-circle"></i>
                    </div>
                </div>
            </div>
        </div>
        
        <div style="margin-bottom: 1.5rem;">
            <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Message *</label>
            <textarea id="notificationMessage" required style="width: 100%; padding: 0.75rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem; min-height: 120px; resize: vertical;"></textarea>
        </div>
        
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1.5rem;">
            <div>
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Priority</label>
                <select id="notificationPriority" style="width: 100%; padding: 0.75rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem;">
                    <option value="low">Low</option>
                    <option value="medium" selected>Medium</option>
                    <option value="high">High</option>
                    <option value="urgent">Urgent</option>
                </select>
            </div>
            <div>
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Expires At</label>
                <input type="datetime-local" id="expiresAt" style="width: 100%; padding: 0.75rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem;">
            </div>
        </div>
        
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1.5rem;">
            <div>
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Action URL (Optional)</label>
                <input type="url" id="actionUrl" placeholder="https://example.com/action" style="width: 100%; padding: 0.75rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem;">
            </div>
            <div>
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">Action Text</label>
                <input type="text" id="actionText" placeholder="View Details" style="width: 100%; padding: 0.75rem; border: 2px solid #e5e7eb; border-radius: 8px; font-size: 1rem;">
            </div>
        </div>
        
        <!-- Notification Preview -->
        <div id="notificationPreview" style="background: #f8fafc; border: 2px dashed #e5e7eb; border-radius: 8px; padding: 1rem; margin-bottom: 1.5rem;">
            <div style="font-size: 0.9rem; color: #6b7280; margin-bottom: 0.5rem; font-weight: 600;">Preview:</div>
            <div style="display: flex; align-items: center; padding: 0.75rem; background: white; border-radius: 6px; border-left: 4px solid #3b82f6;">
                <div id="previewIcon" style="width: 32px; height: 32px; border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 0.75rem; color: white; font-size: 1rem; background: #3b82f6;">
                    <i class="fas fa-info-circle"></i>
                </div>
                <div style="flex: 1;">
                    <div id="previewTitle" style="font-weight: 600; color: #1f2937; margin-bottom: 0.25rem;">Notification Title</div>
                    <div id="previewMessage" style="color: #6b7280; font-size: 0.9rem;">Your notification message will appear here...</div>
                </div>
            </div>
        </div>

        <div style="display: flex; gap: 1rem;">
            <button type="submit" style="padding: 0.75rem 1.5rem; border: none; border-radius: 8px; font-size: 1rem; font-weight: 600; cursor: pointer; background: linear-gradient(135deg, #667eea, #764ba2); color: white; display: inline-flex; align-items: center; gap: 0.5rem;">
                <i class="fas fa-paper-plane"></i>
                Send to All Users
            </button>
            <button type="button" onclick="resetNotificationForm()" style="padding: 0.75rem 1.5rem; border: none; border-radius: 8px; font-size: 1rem; font-weight: 600; cursor: pointer; background: #6b7280; color: white;">
                <i class="fas fa-undo"></i>
                Reset
            </button>
        </div>
    </form>
</div>

<!-- Recent Notifications -->
<div style="background: white; padding: 2rem; border-radius: 12px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);">
    <h2 style="font-size: 1.3rem; color: #1f2937; margin-bottom: 1rem; display: flex; align-items: center; gap: 0.5rem;">
        <i class="fas fa-history"></i>
        Recent Notifications
    </h2>
    
    <style>
        .notification-icon {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            flex-shrink: 0;
            color: white;
            margin-right: 1rem;
        }

        .notification-icon.info {
            background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 100%);
        }

        .notification-icon.success {
            background: linear-gradient(135deg, #10b981 0%, #34d399 100%);
        }

        .notification-icon.warning {
            background: linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%);
        }

        .notification-icon.error {
            background: linear-gradient(135deg, #ef4444 0%, #f87171 100%);
        }

        .notification-icon.shipment {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
        }

        .notification-icon.payment {
            background: linear-gradient(135deg, #059669 0%, #10b981 100%);
        }

        .notification-icon.feature {
            background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        }

        .notification-icon.system {
            background: linear-gradient(135deg, #6b7280 0%, #9ca3af 100%);
        }

        .notification-icon.security {
            background: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);
        }
    </style>
    
    <% if (recentNotifications && recentNotifications.length > 0) { %>
        <% recentNotifications.forEach(notification => { %>
            <div style="display: flex; align-items: center; padding: 1rem; border-bottom: 1px solid #e5e7eb;">
                <div class="notification-icon <%= notification.type %>">
                    <i class="fas fa-<%= getNotificationIcon(notification.type) %>"></i>
                </div>
                <div style="flex: 1;">
                    <div style="font-weight: 600; color: #1f2937; margin-bottom: 0.25rem;"><%= notification.title %></div>
                    <div style="color: #6b7280; font-size: 0.9rem; margin-bottom: 0.25rem;"><%= notification.message %></div>
                    <div style="font-size: 0.8rem; color: #9ca3af;">
                        Sent <%= new Date(notification.createdAt || notification.sentAt).toLocaleDateString() %> • <%= notification.sentToCount || notification.recipients || 0 %> recipients
                    </div>
                </div>
            </div>
        <% }); %>
    <% } else { %>
        <div style="text-align: center; padding: 3rem; color: #6b7280;">
            <i class="fas fa-bell-slash" style="font-size: 3rem; margin-bottom: 1rem; opacity: 0.5;"></i>
            <h3 style="color: #374151; margin-bottom: 0.5rem; font-size: 1.2rem;">No notifications sent yet</h3>
            <p style="margin-bottom: 1.5rem;">Get started by creating your first notification to engage with your users.</p>
            <button onclick="document.getElementById('notificationTitle').focus()" style="background: #3b82f6; color: white; padding: 0.75rem 1.5rem; border: none; border-radius: 8px; cursor: pointer; font-weight: 500; transition: background 0.2s;">
                <i class="fas fa-plus"></i> Create First Notification
            </button>
        </div>
    <% } %>
</div>

<script>
    // Notification type configuration
    const notificationTypes = {
        info: { icon: 'info-circle', color: '#3b82f6', borderColor: '#3b82f6' },
        success: { icon: 'check-circle', color: '#10b981', borderColor: '#10b981' },
        warning: { icon: 'exclamation-triangle', color: '#f59e0b', borderColor: '#f59e0b' },
        error: { icon: 'times-circle', color: '#ef4444', borderColor: '#ef4444' },
        feature: { icon: 'star', color: '#8b5cf6', borderColor: '#8b5cf6' },
        system: { icon: 'cog', color: '#6b7280', borderColor: '#6b7280' },
        shipment: { icon: 'box', color: '#059669', borderColor: '#059669' },
        payment: { icon: 'credit-card', color: '#dc2626', borderColor: '#dc2626' },
        security: { icon: 'shield-alt', color: '#7c3aed', borderColor: '#7c3aed' }
    };

    // Update notification preview when type changes
    function updateNotificationPreview() {
        const type = document.getElementById('notificationType').value;
        const title = document.getElementById('notificationTitle').value || 'Notification Title';
        const message = document.getElementById('notificationMessage').value || 'Your notification message will appear here...';
        
        const config = notificationTypes[type];
        
        // Update type icon in dropdown
        const typeIcon = document.getElementById('typeIcon');
        typeIcon.style.background = config.color;
        typeIcon.innerHTML = `<i class="fas fa-${config.icon}"></i>`;
        
        // Update preview
        const previewIcon = document.getElementById('previewIcon');
        const previewTitle = document.getElementById('previewTitle');
        const previewMessage = document.getElementById('previewMessage');
        const previewContainer = document.getElementById('notificationPreview').querySelector('div:last-child');
        
        previewIcon.style.background = config.color;
        previewIcon.innerHTML = `<i class="fas fa-${config.icon}"></i>`;
        previewContainer.style.borderLeftColor = config.borderColor;
        previewTitle.textContent = title;
        previewMessage.textContent = message;
    }

    // Update preview when title or message changes
    document.getElementById('notificationTitle').addEventListener('input', updateNotificationPreview);
    document.getElementById('notificationMessage').addEventListener('input', updateNotificationPreview);

    // Reset form function
    function resetNotificationForm() {
        document.getElementById('notificationForm').reset();
        updateNotificationPreview();
    }

    // Handle form submission
    document.getElementById('notificationForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        console.log('🚀 [FRONTEND DEBUG] Form submission started');
        
        const formData = {
            title: document.getElementById('notificationTitle').value,
            message: document.getElementById('notificationMessage').value,
            type: document.getElementById('notificationType').value,
            priority: document.getElementById('notificationPriority').value,
            actionUrl: document.getElementById('actionUrl').value,
            actionText: document.getElementById('actionText').value,
            expiresAt: document.getElementById('expiresAt').value
        };
        
        console.log('📝 [FRONTEND DEBUG] Form data collected:', formData);
        
        if (!formData.title || !formData.message) {
            console.log('❌ [FRONTEND DEBUG] Validation failed: Missing title or message');
            showError('Please fill in both title and message');
            return;
        }
        
        // Show loading state
        const submitBtn = document.querySelector('#notificationForm button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';
        submitBtn.disabled = true;
        console.log('⏳ [FRONTEND DEBUG] Button set to loading state');
        
        try {
            console.log('📡 [FRONTEND DEBUG] Making API request to /api/admin/notifications/broadcast');
            const response = await fetch('/api/admin/notifications/broadcast', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });
            
            console.log('📨 [FRONTEND DEBUG] Response status:', response.status);
            console.log('📨 [FRONTEND DEBUG] Response headers:', Object.fromEntries(response.headers.entries()));
            
            const result = await response.json();
            console.log('📋 [FRONTEND DEBUG] Response data:', result);
            
            if (result.success) {
                console.log('✅ [FRONTEND DEBUG] Success response received');
                showSuccess(`Notification sent successfully to ${result.count} users!`);
                resetNotificationForm();
                
                // Emit real-time notification via WebSocket if available
                if (window.socket) {
                    console.log('🔌 [FRONTEND DEBUG] Emitting WebSocket event');
                    window.socket.emit('admin-broadcast', formData);
                } else {
                    console.log('⚠️ [FRONTEND DEBUG] No WebSocket connection available');
                }
            } else {
                console.log('❌ [FRONTEND DEBUG] Error response received:', result.message);
                showError(result.message || 'Failed to send notification');
            }
        } catch (error) {
            console.error('💥 [FRONTEND DEBUG] Request failed:', error);
            console.error('📊 [FRONTEND DEBUG] Error details:', error.message, error.stack);
            showError(`Network error: ${error.message}`);
        } finally {
            // Reset button state
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
            console.log('🔄 [FRONTEND DEBUG] Button state reset');
        }
    });

    // Show success/error messages
    function showSuccess(message) {
        const successEl = document.getElementById('successMessage');
        const errorEl = document.getElementById('errorMessage');
        
        errorEl.style.display = 'none';
        successEl.textContent = message;
        successEl.style.display = 'block';
        
        setTimeout(() => {
            successEl.style.display = 'none';
        }, 5000);
    }

    function showError(message) {
        const successEl = document.getElementById('successMessage');
        const errorEl = document.getElementById('errorMessage');
        
        successEl.style.display = 'none';
        errorEl.textContent = message;
        errorEl.style.display = 'block';
        
        setTimeout(() => {
            errorEl.style.display = 'none';
        }, 5000);
    }

    // Initialize preview on page load
    document.addEventListener('DOMContentLoaded', function() {
        updateNotificationPreview();
    });
</script>
