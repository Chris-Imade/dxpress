<!-- Advanced Order Tracking -->
<div class="dashboard-card" style="margin-bottom: 24px;">
    <div class="card-header">
        <div class="card-icon">
            <i class="fas fa-search-location"></i>
        </div>
        <div>
            <div class="card-title">Track Your Package</div>
            <div class="card-subtitle">Enter tracking number to get real-time updates</div>
        </div>
    </div>
    <div style="margin-top: 20px;">
        <form id="trackingForm" style="display: flex; gap: 12px; margin-bottom: 24px;">
            <input 
                type="text" 
                id="trackingNumber" 
                placeholder="Enter tracking number (e.g., DX-2024-001)" 
                style="flex: 1; padding: 12px 16px; border: 2px solid #e5e7eb; border-radius: 10px; font-size: 16px; transition: border-color 0.3s ease;"
                onfocus="this.style.borderColor='#032330'"
                onblur="this.style.borderColor='#e5e7eb'"
            >
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-search"></i>
                Track Package
            </button>
        </form>
    </div>
</div>

<!-- Tracking Results -->
<div id="trackingResults" style="display: none;">
    <div class="dashboard-card" style="margin-bottom: 24px;">
        <div class="card-header">
            <div class="card-icon">
                <i class="fas fa-box"></i>
            </div>
            <div>
                <div class="card-title">Package Details</div>
                <div class="card-subtitle" id="trackingId">DX-2024-001</div>
            </div>
        </div>
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-top: 20px;">
            <div>
                <div style="font-size: 14px; color: #6b7280; margin-bottom: 4px;">Status</div>
                <div id="packageStatus" style="font-weight: 600; color: #032330;">In Transit</div>
            </div>
            <div>
                <div style="font-size: 14px; color: #6b7280; margin-bottom: 4px;">Estimated Delivery</div>
                <div id="estimatedDelivery" style="font-weight: 600; color: #032330;">Jan 18, 2024</div>
            </div>
            <div>
                <div style="font-size: 14px; color: #6b7280; margin-bottom: 4px;">Carrier</div>
                <div id="carrier" style="font-weight: 600; color: #032330;">DHL Express</div>
            </div>
            <div>
                <div style="font-size: 14px; color: #6b7280; margin-bottom: 4px;">Weight</div>
                <div id="packageWeight" style="font-weight: 600; color: #032330;">2.5 kg</div>
            </div>
        </div>
    </div>

    <!-- Tracking Timeline -->
    <div class="dashboard-card" style="margin-bottom: 24px;">
        <div class="card-header">
            <div class="card-icon">
                <i class="fas fa-route"></i>
            </div>
            <div>
                <div class="card-title">Tracking Timeline</div>
                <div class="card-subtitle">Real-time package journey</div>
            </div>
        </div>
        <div id="trackingTimeline" style="margin-top: 20px;">
            <!-- Timeline items will be populated here -->
        </div>
    </div>

    <!-- Live Map -->
    <div class="dashboard-card">
        <div class="card-header">
            <div class="card-icon">
                <i class="fas fa-map-marked-alt"></i>
            </div>
            <div>
                <div class="card-title">Live Location</div>
                <div class="card-subtitle">Real-time package location</div>
            </div>
        </div>
        <div id="trackingMap" style="height: 400px; border-radius: 12px; margin-top: 16px;"></div>
    </div>
</div>

<!-- Recent Tracking History -->
<div class="dashboard-card" style="margin-top: 24px;">
    <div class="card-header">
        <div class="card-icon">
            <i class="fas fa-history"></i>
        </div>
        <div>
            <div class="card-title">Recent Tracking History</div>
            <div class="card-subtitle">Your recently tracked packages</div>
        </div>
    </div>
    <div id="recentTrackingContainer" style="margin-top: 16px;">
        <!-- Recent tracking items will be populated by JavaScript -->
    </div>
</div>

<style>
.recent-tracking-item:hover {
    background: #f9fafb;
    border-color: #032330;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(3, 35, 48, 0.1);
}

.timeline-item {
    display: flex;
    align-items: flex-start;
    gap: 16px;
    padding: 16px 0;
    border-left: 2px solid #e5e7eb;
    margin-left: 12px;
    padding-left: 24px;
    position: relative;
}

.timeline-item:last-child {
    border-left: none;
}

.timeline-item::before {
    content: '';
    position: absolute;
    left: -7px;
    top: 20px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #032330;
}

.timeline-item.completed::before {
    background: #10b981;
}

.timeline-item.current::before {
    background: #3b82f6;
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
}

.timeline-content {
    flex: 1;
}

.timeline-title {
    font-weight: 600;
    color: #1a1f36;
    margin-bottom: 4px;
}

.timeline-description {
    color: #6b7280;
    font-size: 14px;
    margin-bottom: 4px;
}

.timeline-time {
    color: #9ca3af;
    font-size: 12px;
}
</style>

<script>
let trackingMap;

document.addEventListener('DOMContentLoaded', function() {
    // Load recent tracking history
    loadRecentTracking();
    
    // Handle tracking form submission
    document.getElementById('trackingForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const trackingNumber = document.getElementById('trackingNumber').value.trim();
        if (trackingNumber) {
            trackPackage(trackingNumber);
        }
    });

    // Check if there's a tracking ID in URL params
    const urlParams = new URLSearchParams(window.location.search);
    const trackingId = urlParams.get('id');
    if (trackingId) {
        document.getElementById('trackingNumber').value = trackingId;
        trackPackage(trackingId);
    }
});

function loadRecentTracking() {
    fetch('/dashboard/api/shipments?limit=5&sort=recent')
        .then(response => response.json())
        .then(data => {
            if (data.success && data.shipments && data.shipments.length > 0) {
                renderRecentTracking(data.shipments);
            } else {
                showEmptyRecentTracking();
            }
        })
        .catch(error => {
            console.error('Error loading recent tracking:', error);
            showEmptyRecentTracking();
        });
}

function renderRecentTracking(shipments) {
    const container = document.getElementById('recentTrackingContainer');
    container.innerHTML = shipments.map(shipment => {
        const statusClass = getStatusClass(shipment.status);
        const statusText = shipment.status?.toUpperCase() || 'UNKNOWN';
        
        return `
            <div class="recent-tracking-item" style="display: flex; align-items: center; justify-content: space-between; padding: 16px; border: 1px solid #e5e7eb; border-radius: 10px; margin-bottom: 12px; cursor: pointer; transition: all 0.3s ease;" onclick="quickTrack('${shipment.trackingId}')">
                <div style="display: flex; align-items: center; gap: 12px;">
                    <div style="width: 40px; height: 40px; background: linear-gradient(135deg, #032330, #1a4c5a); border-radius: 10px; display: flex; align-items: center; justify-content: center; color: white;">
                        <i class="fas fa-box"></i>
                    </div>
                    <div>
                        <div style="font-weight: 600; color: #032330;">${shipment.trackingId}</div>
                        <div style="font-size: 14px; color: #6b7280;">To: ${shipment.destination?.name || 'N/A'}, ${shipment.destination?.city || 'N/A'}</div>
                    </div>
                </div>
                <div style="text-align: right;">
                    <div class="status-badge ${statusClass}" style="padding: 4px 8px; border-radius: 6px; font-size: 12px; font-weight: 600;">${statusText}</div>
                    <div style="font-size: 12px; color: #6b7280; margin-top: 4px;">${new Date(shipment.updatedAt).toLocaleDateString()}</div>
                </div>
            </div>
        `;
    }).join('');
}

function showEmptyRecentTracking() {
    const container = document.getElementById('recentTrackingContainer');
    container.innerHTML = `
        <div style="text-align: center; padding: 60px 20px; color: #6b7280;">
            <i class="fas fa-search" style="font-size: 3rem; margin-bottom: 20px; opacity: 0.5;"></i>
            <h4>No Recent Tracking History</h4>
            <p style="margin-bottom: 20px;">You haven't tracked any packages yet. Start by entering a tracking number above.</p>
            <button class="btn btn-primary" onclick="document.getElementById('trackingNumber').focus()">
                <i class="fas fa-search me-2"></i>Track Your First Package
            </button>
        </div>
    `;
}

function getStatusClass(status) {
    switch(status?.toLowerCase()) {
        case 'delivered': return 'delivered';
        case 'in_transit': 
        case 'processing': return 'transit';
        case 'pending':
        case 'draft': return 'pending';
        default: return 'pending';
    }
}

function trackPackage(trackingNumber) {
    // Show loading state
    const resultsDiv = document.getElementById('trackingResults');
    resultsDiv.style.display = 'block';
    
    // Update tracking ID
    document.getElementById('trackingId').textContent = trackingNumber;
    
    // Show loading spinner
    document.getElementById('trackingTimeline').innerHTML = '<div style="text-align: center; padding: 40px;"><div class="loading-spinner"></div><p style="margin-top: 16px; color: #6b7280;">Fetching tracking information...</p></div>';
    
    // Call API for real tracking data
    fetch(`/dashboard/api/track/${encodeURIComponent(trackingNumber)}`)
        .then(response => response.json())
        .then(data => {
            if (data.success && data.data) {
                displayTrackingResults(data.data);
            } else {
                showTrackingNotFound(trackingNumber);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('trackingTimeline').innerHTML = '<div style="text-align: center; padding: 40px; color: #ef4444;">Failed to fetch tracking information. Please try again.</div>';
        });
}

function displayTrackingResults(shipment) {
    // Update tracking information from shipment data
    document.getElementById('packageStatus').textContent = shipment.status?.toUpperCase() || 'UNKNOWN';
    document.getElementById('estimatedDelivery').textContent = shipment.estimatedDelivery ? new Date(shipment.estimatedDelivery).toLocaleDateString() : 'TBD';
    document.getElementById('carrier').textContent = shipment.carrier || 'N/A';
    document.getElementById('packageWeight').textContent = `${shipment.weight || 0} kg`;
    
    // Create timeline from shipment data
    const timeline = createTimelineFromShipment(shipment);
    document.getElementById('trackingTimeline').innerHTML = timeline;
    
    // Update map if coordinates available
    if (shipment.origin && shipment.destination) {
        const originCoords = [shipment.origin.latitude || 0, shipment.origin.longitude || 0];
        const destCoords = [shipment.destination.latitude || 0, shipment.destination.longitude || 0];
        initializeTrackingMap(originCoords, destCoords);
    }
}

function createTimelineFromShipment(shipment) {
    const events = [];
    
    // Add events based on shipment status and dates
    if (shipment.status === 'delivered') {
        events.push({
            title: 'Package Delivered',
            description: `Delivered to ${shipment.destination?.name || 'recipient'}`,
            time: new Date(shipment.deliveredAt || shipment.updatedAt).toLocaleString(),
            status: 'completed'
        });
    }
    
    if (['delivered', 'in_transit'].includes(shipment.status)) {
        events.push({
            title: 'In Transit',
            description: `Package is on its way to ${shipment.destination?.city || 'destination'}`,
            time: new Date(shipment.shippedAt || shipment.updatedAt).toLocaleString(),
            status: shipment.status === 'delivered' ? 'completed' : 'current'
        });
    }
    
    if (['delivered', 'in_transit', 'processing'].includes(shipment.status)) {
        events.push({
            title: 'Package Processed',
            description: `Package processed at ${shipment.origin?.city || 'origin'} facility`,
            time: new Date(shipment.createdAt).toLocaleString(),
            status: ['delivered', 'in_transit'].includes(shipment.status) ? 'completed' : 'current'
        });
    }
    
    events.push({
        title: 'Label Created',
        description: 'Shipping label created and package prepared',
        time: new Date(shipment.createdAt).toLocaleString(),
        status: 'completed'
    });
    
    return events.map(event => `
        <div class="timeline-item ${event.status}">
            <div class="timeline-content">
                <div class="timeline-title">${event.title}</div>
                <div class="timeline-description">${event.description}</div>
                <div class="timeline-time">${event.time}</div>
            </div>
        </div>
    `).join('');
}

function showTrackingNotFound(trackingNumber) {
    document.getElementById('trackingTimeline').innerHTML = `
        <div style="text-align: center; padding: 60px 20px; color: #6b7280;">
            <i class="fas fa-search" style="font-size: 3rem; margin-bottom: 20px; opacity: 0.5; color: #ef4444;"></i>
            <h4>Tracking Number Not Found</h4>
            <p style="margin-bottom: 20px;">We couldn't find any shipment with tracking number: <strong>${trackingNumber}</strong></p>
            <p style="margin-bottom: 20px;">Please check the tracking number and try again, or contact support if you believe this is an error.</p>
            <div style="display: flex; gap: 12px; justify-content: center;">
                <button class="btn btn-secondary" onclick="document.getElementById('trackingNumber').focus(); document.getElementById('trackingNumber').select();">
                    <i class="fas fa-edit me-2"></i>Try Again
                </button>
                <button class="btn btn-primary" onclick="window.location.href='/dashboard/create-shipment'">
                    <i class="fas fa-plus me-2"></i>Create Shipment
                </button>
            </div>
        </div>
    `;
}

function displayTrackingResultsOld(trackingNumber) {
    // Sample tracking data - replace with actual API data
    const trackingData = {
        'DX-2024-001': {
            status: 'Delivered',
            estimatedDelivery: 'Jan 15, 2024 (Delivered)',
            carrier: 'DHL Express',
            weight: '2.5 kg',
            timeline: [
                { title: 'Package Delivered', description: 'Delivered to recipient at front door', time: 'Jan 15, 2024 - 2:30 PM', status: 'completed' },
                { title: 'Out for Delivery', description: 'Package is out for delivery', time: 'Jan 15, 2024 - 8:00 AM', status: 'completed' },
                { title: 'Arrived at Local Facility', description: 'Package arrived at New York distribution center', time: 'Jan 14, 2024 - 11:45 PM', status: 'completed' },
                { title: 'In Transit', description: 'Package is in transit to destination', time: 'Jan 13, 2024 - 3:20 PM', status: 'completed' },
                { title: 'Package Shipped', description: 'Package has been shipped from origin', time: 'Jan 12, 2024 - 9:15 AM', status: 'completed' }
            ],
            coordinates: [40.7128, -74.0060]
        },
        'DX-2024-002': {
            status: 'In Transit',
            estimatedDelivery: 'Jan 18, 2024',
            carrier: 'FedEx',
            weight: '1.8 kg',
            timeline: [
                { title: 'In Transit', description: 'Package is in transit to Los Angeles', time: 'Jan 16, 2024 - 1:15 PM', status: 'current' },
                { title: 'Departed Facility', description: 'Package departed from Chicago sorting facility', time: 'Jan 15, 2024 - 10:30 PM', status: 'completed' },
                { title: 'Arrived at Facility', description: 'Package arrived at Chicago sorting facility', time: 'Jan 15, 2024 - 2:45 PM', status: 'completed' },
                { title: 'Package Shipped', description: 'Package has been shipped from origin', time: 'Jan 14, 2024 - 11:00 AM', status: 'completed' }
            ],
            coordinates: [34.0522, -118.2437]
        },
        'DX-2024-003': {
            status: 'Processing',
            estimatedDelivery: 'Jan 20, 2024',
            carrier: 'UPS',
            weight: '3.2 kg',
            timeline: [
                { title: 'Processing', description: 'Package is being processed at origin facility', time: 'Jan 16, 2024 - 9:00 AM', status: 'current' },
                { title: 'Label Created', description: 'Shipping label has been created', time: 'Jan 15, 2024 - 4:30 PM', status: 'completed' }
            ],
            coordinates: [41.8781, -87.6298]
        }
    };

    const data = trackingData[trackingNumber] || trackingData['DX-2024-002']; // Default fallback

    // Update package details
    document.getElementById('packageStatus').textContent = data.status;
    document.getElementById('estimatedDelivery').textContent = data.estimatedDelivery;
    document.getElementById('carrier').textContent = data.carrier;
    document.getElementById('packageWeight').textContent = data.weight;

    // Update timeline
    const timelineDiv = document.getElementById('trackingTimeline');
    timelineDiv.innerHTML = data.timeline.map(item => `
        <div class="timeline-item ${item.status}">
            <div class="timeline-content">
                <div class="timeline-title">${item.title}</div>
                <div class="timeline-description">${item.description}</div>
                <div class="timeline-time">${item.time}</div>
            </div>
        </div>
    `).join('');

    // Initialize map
    initializeTrackingMap(data.coordinates);
}

function initializeTrackingMap(originCoords, destCoords) {
    if (trackingMap) {
        trackingMap.remove();
    }

    // Use destination coordinates as center, fallback to origin or default
    const centerCoords = destCoords[0] !== 0 ? destCoords : (originCoords[0] !== 0 ? originCoords : [40.7128, -74.0060]);
    trackingMap = L.map('trackingMap').setView(centerCoords, 10);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(trackingMap);

    // Add origin marker if coordinates available
    if (originCoords[0] !== 0) {
        const originIcon = L.divIcon({
            html: '<i class="fas fa-play" style="color: #10b981; font-size: 16px;"></i>',
            iconSize: [25, 25],
            className: 'custom-div-icon'
        });
        L.marker(originCoords, {icon: originIcon}).addTo(trackingMap)
            .bindPopup('Origin Location');
    }

    // Add destination marker if coordinates available
    if (destCoords[0] !== 0) {
        const destIcon = L.divIcon({
            html: '<i class="fas fa-map-marker-alt" style="color: #ef4444; font-size: 16px;"></i>',
            iconSize: [25, 25],
            className: 'custom-div-icon'
        });
        L.marker(destCoords, {icon: destIcon}).addTo(trackingMap)
            .bindPopup('Destination Location');
    }

    // Add route line if both coordinates available
    if (originCoords[0] !== 0 && destCoords[0] !== 0) {
        L.polyline([originCoords, destCoords], {
            color: '#032330',
            weight: 3,
            opacity: 0.7,
            dashArray: '5, 10'
        }).addTo(trackingMap);
        
        // Fit map to show both markers
        const group = new L.featureGroup([L.marker(originCoords), L.marker(destCoords)]);
        trackingMap.fitBounds(group.getBounds().pad(0.1));
    }
}

function quickTrack(trackingNumber) {
    document.getElementById('trackingNumber').value = trackingNumber;
    trackPackage(trackingNumber);
    
    // Scroll to results
    document.getElementById('trackingResults').scrollIntoView({ 
        behavior: 'smooth' 
    });
}

// Add CSS for status badges
const style = document.createElement('style');
style.textContent = `
    .status-badge.delivered {
        background: #dcfce7;
        color: #166534;
    }
    .status-badge.transit {
        background: #dbeafe;
        color: #1d4ed8;
    }
    .status-badge.pending {
        background: #fef3c7;
        color: #92400e;
    }
    .loading-spinner {
        border: 3px solid #f3f3f3;
        border-top: 3px solid #032330;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        animation: spin 1s linear infinite;
        margin: 0 auto;
    }
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
`;
document.head.appendChild(style);
</script>
