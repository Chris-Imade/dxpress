<!-- Automated Order Processing -->
<div class="dashboard-card" style="margin-bottom: 24px;">
    <div class="card-header">
        <div class="card-icon">
            <i class="fas fa-cogs"></i>
        </div>
        <div>
            <div class="card-title">Automated Order Processing</div>
            <div class="card-subtitle">Streamline your shipping workflow</div>
        </div>
        <div style="margin-left: auto;">
            <button class="btn btn-primary" onclick="openAutomationModal()">
                <i class="fas fa-plus"></i>
                Create Rule
            </button>
        </div>
    </div>
</div>

<!-- Processing Stats -->
<div id="shipmentsStats" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 24px;">
    <!-- Stats will be populated by JavaScript -->
</div>

<!-- All Shipments -->
<div class="dashboard-card" style="margin-bottom: 24px;">
    <div class="card-header">
        <div class="card-icon">
            <i class="fas fa-list"></i>
        </div>
        <div>
            <div class="card-title">All Shipments</div>
            <div class="card-subtitle">Complete list of your shipments</div>
        </div>
        <div style="margin-left: auto;">
            <select id="statusFilter" style="padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 6px; font-size: 14px;">
                <option value="">All Status</option>
                <option value="pending">Pending</option>
                <option value="transit">In Transit</option>
                <option value="delivered">Delivered</option>
                <option value="cancelled">Cancelled</option>
            </select>
        </div>
    </div>
    <div style="margin-top: 20px; overflow-x: auto;">
        <table style="width: 100%; border-collapse: collapse;">
            <thead>
                <tr style="background: #f9fafb; border-bottom: 2px solid #e5e7eb;">
                    <th style="padding: 16px; text-align: left; font-weight: 600; color: #374151;">Tracking #</th>
                    <th style="padding: 16px; text-align: left; font-weight: 600; color: #374151;">Route</th>
                    <th style="padding: 16px; text-align: left; font-weight: 600; color: #374151;">Carrier</th>
                    <th style="padding: 16px; text-align: left; font-weight: 600; color: #374151;">Status</th>
                    <th style="padding: 16px; text-align: left; font-weight: 600; color: #374151;">Date</th>
                    <th style="padding: 16px; text-align: left; font-weight: 600; color: #374151;">Value</th>
                    <th style="padding: 16px; text-align: center; font-weight: 600; color: #374151;">Actions</th>
                </tr>
            </thead>
            <tbody id="shipmentsTableBody">
                <!-- Shipments will be populated by JavaScript -->
            </tbody>
        </table>
    </div>
    
    <!-- Pagination -->
    <div id="paginationContainer" style="display: none; justify-content: space-between; align-items: center; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
        <div id="paginationInfo" style="font-size: 14px; color: #6b7280;">
            <!-- Pagination info will be populated by JavaScript -->
        </div>
        <div id="paginationControls" style="display: flex; gap: 8px;">
            <!-- Pagination controls will be populated by JavaScript -->
        </div>
    </div>
</div>

<!-- Recent Processing Activity -->
<div class="dashboard-card">
    <div class="card-header">
        <div class="card-icon">
            <i class="fas fa-activity"></i>
        </div>
        <div>
            <div class="card-title">Recent Processing Activity</div>
            <div class="card-subtitle">Latest automated order processing events</div>
        </div>
    </div>
    <div style="margin-top: 20px;">
        <div class="activity-item" style="display: flex; align-items: center; gap: 16px; padding: 16px; border-bottom: 1px solid #f3f4f6;">
            <div style="width: 40px; height: 40px; background: linear-gradient(135deg, #10b981, #059669); border-radius: 10px; display: flex; align-items: center; justify-content: center; color: white;">
                <i class="fas fa-check"></i>
            </div>
            <div style="flex: 1;">
                <div style="font-weight: 600; color: #032330;">Order #ORD-2024-001234 processed successfully</div>
                <div style="font-size: 14px; color: #6b7280;">Express Orders Auto-Processing • DHL Express selected</div>
            </div>
            <div style="text-align: right; font-size: 12px; color: #6b7280;">
                <div>2 minutes ago</div>
                <div style="color: #10b981; font-weight: 600;">Success</div>
            </div>
        </div>

        <div class="activity-item" style="display: flex; align-items: center; gap: 16px; padding: 16px; border-bottom: 1px solid #f3f4f6;">
            <div style="width: 40px; height: 40px; background: linear-gradient(135deg, #3b82f6, #1d4ed8); border-radius: 10px; display: flex; align-items: center; justify-content: center; color: white;">
                <i class="fas fa-boxes"></i>
            </div>
            <div style="flex: 1;">
                <div style="font-weight: 600; color: #032330;">5 orders consolidated for bulk shipping</div>
                <div style="font-size: 14px; color: #6b7280;">Bulk Orders Optimization • $45.50 saved in shipping costs</div>
            </div>
            <div style="text-align: right; font-size: 12px; color: #6b7280;">
                <div>15 minutes ago</div>
                <div style="color: #10b981; font-weight: 600;">Success</div>
            </div>
        </div>

        <div class="activity-item" style="display: flex; align-items: center; gap: 16px; padding: 16px; border-bottom: 1px solid #f3f4f6;">
            <div style="width: 40px; height: 40px; background: linear-gradient(135deg, #f59e0b, #d97706); border-radius: 10px; display: flex; align-items: center; justify-content: center; color: white;">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div style="flex: 1;">
                <div style="font-weight: 600; color: #032330;">Order #ORD-2024-001230 requires manual review</div>
                <div style="font-size: 14px; color: #6b7280;">International Shipping Compliance • Restricted item detected</div>
            </div>
            <div style="text-align: right; font-size: 12px; color: #6b7280;">
                <div>1 hour ago</div>
                <div style="color: #f59e0b; font-weight: 600;">Pending</div>
            </div>
        </div>

        <div class="activity-item" style="display: flex; align-items: center; gap: 16px; padding: 16px;">
            <div style="width: 40px; height: 40px; background: linear-gradient(135deg, #10b981, #059669); border-radius: 10px; display: flex; align-items: center; justify-content: center; color: white;">
                <i class="fas fa-shipping-fast"></i>
            </div>
            <div style="flex: 1;">
                <div style="font-weight: 600; color: #032330;">Pickup scheduled for 8 consolidated orders</div>
                <div style="font-size: 14px; color: #6b7280;">Bulk Orders Optimization • FedEx pickup at 2:00 PM</div>
            </div>
            <div style="text-align: right; font-size: 12px; color: #6b7280;">
                <div>2 hours ago</div>
                <div style="color: #10b981; font-weight: 600;">Success</div>
            </div>
        </div>
    </div>
</div>

<!-- Automation Rule Modal -->
<div id="automationModal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 600px;">
        <div class="modal-header">
            <h3>Create Automation Rule</h3>
            <button class="modal-close" onclick="closeAutomationModal()">&times;</button>
        </div>
        <div class="modal-body">
            <form id="automationForm">
                <div style="margin-bottom: 20px;">
                    <label style="display: block; font-weight: 600; margin-bottom: 8px;">Rule Name</label>
                    <input type="text" id="ruleName" placeholder="Enter rule name" style="width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 8px;">
                </div>

                <div style="margin-bottom: 20px;">
                    <label style="display: block; font-weight: 600; margin-bottom: 8px;">Trigger Conditions</label>
                    <div id="conditionsContainer">
                        <div class="condition-row" style="display: flex; gap: 12px; margin-bottom: 12px; align-items: center;">
                            <select style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
                                <option>Order Value</option>
                                <option>Delivery Type</option>
                                <option>Customer Tier</option>
                                <option>Destination Country</option>
                                <option>Package Weight</option>
                            </select>
                            <select style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
                                <option>Greater than</option>
                                <option>Less than</option>
                                <option>Equal to</option>
                                <option>Contains</option>
                            </select>
                            <input type="text" placeholder="Value" style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
                            <button type="button" onclick="removeCondition(this)" style="padding: 10px; background: #ef4444; color: white; border: none; border-radius: 6px;">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <button type="button" onclick="addCondition()" class="btn btn-secondary">
                        <i class="fas fa-plus"></i>
                        Add Condition
                    </button>
                </div>

                <div style="margin-bottom: 20px;">
                    <label style="display: block; font-weight: 600; margin-bottom: 8px;">Actions</label>
                    <div id="actionsContainer">
                        <div class="action-row" style="display: flex; gap: 12px; margin-bottom: 12px; align-items: center;">
                            <select style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
                                <option>Select Carrier</option>
                                <option>Generate Label</option>
                                <option>Send Notification</option>
                                <option>Update Inventory</option>
                                <option>Calculate Discount</option>
                                <option>Schedule Pickup</option>
                            </select>
                            <input type="text" placeholder="Action details" style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
                            <button type="button" onclick="removeAction(this)" style="padding: 10px; background: #ef4444; color: white; border: none; border-radius: 6px;">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <button type="button" onclick="addAction()" class="btn btn-secondary">
                        <i class="fas fa-plus"></i>
                        Add Action
                    </button>
                </div>

                <div style="display: flex; gap: 12px; justify-content: flex-end;">
                    <button type="button" onclick="closeAutomationModal()" class="btn btn-secondary">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Rule</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
.status-badge {
    padding: 4px 8px;
    border-radius: 6px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    display: inline-block;
    white-space: nowrap;
    width: fit-content;
}

.status-badge.delivered {
    background: #d1fae5;
    color: #065f46;
}

.status-badge.transit {
    background: #dbeafe;
    color: #1d4ed8;
}

.status-badge.pending {
    background: #fef3c7;
    color: #92400e;
}

.status-badge.cancelled {
    background: #fee2e2;
    color: #991b1b;
}

.action-btn {
    padding: 8px;
    background: #f3f4f6;
    border: none;
    border-radius: 6px;
    color: #6b7280;
    cursor: pointer;
    transition: all 0.2s ease;
}

.action-btn:hover {
    background: #032330;
    color: white;
}

.toggle-switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 24px;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 24px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: #032330;
}

input:checked + .slider:before {
    transform: translateX(26px);
}

.modal {
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-content {
    background: white;
    border-radius: 12px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #e5e7eb;
}

.modal-header h3 {
    margin: 0;
    color: #032330;
}

.modal-close {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: #6b7280;
}

.modal-body {
    padding: 20px;
}
</style>

<script>
// Global variables
let currentPage = 1;
let currentFilters = {};

// Load shipments on page load
document.addEventListener('DOMContentLoaded', function() {
    loadShipments();
    loadStats();
});

function loadShipments(page = 1) {
    currentPage = page;
    const params = new URLSearchParams({
        page: page,
        limit: 10,
        ...currentFilters
    });

    fetch(`/dashboard/api/shipments?${params}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                renderShipments(data.shipments);
                renderPagination(data.pagination);
            } else {
                showEmptyState('Error loading shipments');
            }
        })
        .catch(error => {
            console.error('Error loading shipments:', error);
            showEmptyState('Failed to load shipments');
        });
}

function loadStats() {
    fetch('/dashboard/api/shipments')
        .then(response => response.json())
        .then(data => {
            if (data.success && data.shipments) {
                renderStats(data.shipments);
            }
        })
        .catch(error => {
            console.error('Error loading stats:', error);
        });
}

function renderStats(shipments) {
    const statsContainer = document.getElementById('shipmentsStats');
    const totalShipments = shipments.length;
    const deliveredCount = shipments.filter(s => s.status === 'delivered').length;
    const inTransitCount = shipments.filter(s => s.status === 'in_transit' || s.status === 'processing').length;
    const pendingCount = shipments.filter(s => s.status === 'draft' || s.status === 'pending').length;

    statsContainer.innerHTML = `
        <div class="stat-card">
            <div class="stat-icon" style="background: linear-gradient(135deg, #10b981, #059669);">
                <i class="fas fa-box"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">${totalShipments}</div>
                <div class="stat-label">Total Shipments</div>
                <div class="stat-change ${totalShipments > 0 ? 'positive' : 'neutral'}">Live data</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon" style="background: linear-gradient(135deg, #3b82f6, #1d4ed8);">
                <i class="fas fa-shipping-fast"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">${inTransitCount}</div>
                <div class="stat-label">In Transit</div>
                <div class="stat-change ${inTransitCount > 0 ? 'positive' : 'neutral'}">Live data</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon" style="background: linear-gradient(135deg, #f59e0b, #d97706);">
                <i class="fas fa-clock"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">${pendingCount}</div>
                <div class="stat-label">Pending</div>
                <div class="stat-change ${pendingCount > 0 ? 'negative' : 'positive'}">Live data</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon" style="background: linear-gradient(135deg, #8b5cf6, #7c3aed);">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">${deliveredCount}</div>
                <div class="stat-label">Delivered</div>
                <div class="stat-change ${deliveredCount > 0 ? 'positive' : 'neutral'}">Live data</div>
            </div>
        </div>
    `;
}

function renderShipments(shipments) {
    const tbody = document.getElementById('shipmentsTableBody');
    
    if (!shipments || shipments.length === 0) {
        showEmptyState();
        return;
    }

    tbody.innerHTML = shipments.map(shipment => `
        <tr style="border-bottom: 1px solid #f3f4f6;">
            <td style="padding: 16px; font-weight: 600; color: #032330;">${shipment.trackingId}</td>
            <td style="padding: 16px; color: #6b7280;">${shipment.origin?.city || 'N/A'} → ${shipment.destination?.city || 'N/A'}</td>
            <td style="padding: 16px; color: #374151;">${shipment.carrier || 'N/A'}</td>
            <td style="padding: 16px; text-align: right;">
                <span class="status-badge ${shipment.status}">${shipment.status?.toUpperCase() || 'UNKNOWN'}</span>
            </td>
            <td style="padding: 16px; color: #6b7280;">${new Date(shipment.createdAt).toLocaleDateString()}</td>
            <td style="padding: 16px; font-weight: 600; color: #032330;">${shipment.currency || 'GBP'} ${(shipment.totalCost || 0).toFixed(2)}</td>
            <td style="padding: 16px; text-align: center;">
                <div style="display: flex; gap: 8px; justify-content: center;">
                    <button class="action-btn" onclick="viewShipment('${shipment.trackingId}')" title="View Details">
                        <i class="fas fa-eye"></i>
                    </button>
                    ${shipment.status === 'delivered' ? '' : `
                        <button class="action-btn" onclick="trackShipment('${shipment.trackingId}')" title="Track">
                            <i class="fas fa-map-marker-alt"></i>
                        </button>
                    `}
                </div>
            </td>
        </tr>
    `).join('');
}

function showEmptyState(message = null) {
    const tbody = document.getElementById('shipmentsTableBody');
    tbody.innerHTML = `
        <tr>
            <td colspan="7" style="padding: 60px 20px; text-align: center; color: #6b7280;">
                <div>
                    <i class="fas fa-box-open" style="font-size: 3rem; margin-bottom: 20px; opacity: 0.5;"></i>
                    <h4>${message || 'No Shipments Found'}</h4>
                    <p style="margin-bottom: 20px;">
                        ${message ? message : 'You haven\'t created any shipments yet. Create your first shipment to get started.'}
                    </p>
                    ${!message ? `
                        <button class="btn btn-primary" onclick="createShipment()">
                            <i class="fas fa-plus me-2"></i>Create Your First Shipment
                        </button>
                    ` : `
                        <button class="btn btn-secondary" onclick="loadShipments()">
                            <i class="fas fa-refresh me-2"></i>Try Again
                        </button>
                    `}
                </div>
            </td>
        </tr>
    `;
}

function renderPagination(pagination) {
    const container = document.getElementById('paginationContainer');
    const info = document.getElementById('paginationInfo');
    const controls = document.getElementById('paginationControls');
    
    if (pagination.totalPages > 1) {
        container.style.display = 'flex';
        info.textContent = `Showing ${((pagination.currentPage - 1) * 10) + 1}-${Math.min(pagination.currentPage * 10, pagination.totalItems)} of ${pagination.totalItems} shipments`;
        
        controls.innerHTML = `
            <button class="btn btn-secondary" style="padding: 8px 12px;" ${!pagination.hasPrev ? 'disabled' : ''} onclick="loadShipments(${pagination.currentPage - 1})">
                <i class="fas fa-chevron-left"></i> Previous
            </button>
            <button class="btn btn-secondary" style="padding: 8px 12px;" ${!pagination.hasNext ? 'disabled' : ''} onclick="loadShipments(${pagination.currentPage + 1})">
                Next <i class="fas fa-chevron-right"></i>
            </button>
        `;
    } else {
        container.style.display = 'none';
    }
}

function createShipment() {
    window.location.href = '/dashboard/create-shipment';
}

function viewShipment(trackingId) {
    window.location.href = `/dashboard/tracking?id=${trackingId}`;
}

function trackShipment(trackingId) {
    window.location.href = `/dashboard/tracking?id=${trackingId}`;
}

function openAutomationModal() {
    document.getElementById('automationModal').style.display = 'flex';
}

function closeAutomationModal() {
    document.getElementById('automationModal').style.display = 'none';
    document.getElementById('automationForm').reset();
}

function toggleRule(ruleId, enabled) {
    console.log(`Rule ${ruleId} ${enabled ? 'enabled' : 'disabled'}`);
    // Here you would make an API call to update the rule status
}

function editRule(ruleId) {
    console.log(`Editing rule ${ruleId}`);
    // Here you would open the edit modal with pre-filled data
}

function addCondition() {
    const container = document.getElementById('conditionsContainer');
    const newCondition = document.createElement('div');
    newCondition.className = 'condition-row';
    newCondition.style.cssText = 'display: flex; gap: 12px; margin-bottom: 12px; align-items: center;';
    newCondition.innerHTML = `
        <select style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
            <option>Order Value</option>
            <option>Delivery Type</option>
            <option>Customer Tier</option>
            <option>Destination Country</option>
            <option>Package Weight</option>
        </select>
        <select style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
            <option>Greater than</option>
            <option>Less than</option>
            <option>Equal to</option>
            <option>Contains</option>
        </select>
        <input type="text" placeholder="Value" style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
        <button type="button" onclick="removeCondition(this)" style="padding: 10px; background: #ef4444; color: white; border: none; border-radius: 6px;">
            <i class="fas fa-trash"></i>
        </button>
    `;
    container.appendChild(newCondition);
}

function removeCondition(button) {
    button.parentElement.remove();
}

function addAction() {
    const container = document.getElementById('actionsContainer');
    const newAction = document.createElement('div');
    newAction.className = 'action-row';
    newAction.style.cssText = 'display: flex; gap: 12px; margin-bottom: 12px; align-items: center;';
    newAction.innerHTML = `
        <select style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
            <option>Select Carrier</option>
            <option>Generate Label</option>
            <option>Send Notification</option>
            <option>Update Inventory</option>
            <option>Calculate Discount</option>
            <option>Schedule Pickup</option>
        </select>
        <input type="text" placeholder="Action details" style="flex: 1; padding: 10px; border: 1px solid #d1d5db; border-radius: 6px;">
        <button type="button" onclick="removeAction(this)" style="padding: 10px; background: #ef4444; color: white; border: none; border-radius: 6px;">
            <i class="fas fa-trash"></i>
        </button>
    `;
    container.appendChild(newAction);
}

function removeAction(button) {
    button.parentElement.remove();
}

document.getElementById('automationForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const ruleName = document.getElementById('ruleName').value;
    if (!ruleName) {
        alert('Please enter a rule name');
        return;
    }
    
    // Collect conditions and actions
    const conditions = [];
    document.querySelectorAll('.condition-row').forEach(row => {
        const selects = row.querySelectorAll('select');
        const input = row.querySelector('input');
        conditions.push({
            field: selects[0].value,
            operator: selects[1].value,
            value: input.value
        });
    });
    
    const actions = [];
    document.querySelectorAll('.action-row').forEach(row => {
        const select = row.querySelector('select');
        const input = row.querySelector('input');
        actions.push({
            type: select.value,
            details: input.value
        });
    });
    
    console.log('Creating automation rule:', {
        name: ruleName,
        conditions: conditions,
        actions: actions
    });
    
    // Here you would make an API call to create the rule
    alert('Automation rule created successfully!');
    closeAutomationModal();
});

// Close modal when clicking outside
document.getElementById('automationModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeAutomationModal();
    }
});
</script>
